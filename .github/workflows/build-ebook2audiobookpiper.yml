name: Build ebook2audiobookpiper

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-ebook2audiobookpiper.yml'
      - 'ebook2audiobookpiper/Dockerfile'
  schedule:
    # Build the image weekly
    - cron: '12 0 * * 5'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pinoykrissmith/containers
  TAG: ebook2audiobookpiper

jobs:
  build:
    name: Build & push new image
    permissions:
      contents: read
      packages: write
    timeout-minutes: 15
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Add support for more platforms with QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.TAG }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./ebook2audiobookpiper
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trivy:
    name: Scan current image with Trivy
    needs: build
    permissions:
      security-events: write
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif
          severity: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          vuln-type: os,library

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          category: trivy-${{ env.TAG }}