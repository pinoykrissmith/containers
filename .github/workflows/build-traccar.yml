name: Build Traccar

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-traccar.yml'
      - 'Traccar/Dockerfile'
  schedule:
    # Build the image weekly
    - cron: '15 0 * * 5'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pinoykrissmith/traccar
  TAG: latest
  CONTEXT: Traccar
  VERSIONED: true

jobs:
  build:
    name: Building new image for ${{ matrix.arch }}
    permissions:
      contents: read
      packages: write
    timeout-minutes: 10
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            arch: amd64
          - runner: ubuntu-22.04-arm
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get tag for builder to use
        run: |
          echo "BUILDER_TAG=$(echo ${{ env.IMAGE_NAME }} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            ${{ env.BUILDER_TAG }}-${{ matrix.arch }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          platforms: linux/${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  merge:
    name: Merging manifests & pushing new image
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Get tag for builder to use
        run: |
          echo "BUILDER_TAG=$(echo ${{ env.IMAGE_NAME }} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Set date tag for weekly images
        if: ${{ github.event_name == 'schedule' }}
        run: |
          echo "DATE_TAG=$(date +'%Y%m%d%H')" >> $GITHUB_ENV

      - name: Get version string
        if: ${{ env.VERSIONED == 'true' }}
        run: |
          echo "FULL_VERSION=$(grep -oP -m 1 '(?<=VERSION=).*' ${{ env.CONTEXT }}/Dockerfile)" >> $GITHUB_ENV

      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.TAG }}
            ${{ env.DATE_TAG }}
            ${{ env.FULL_VERSION }}

      - name: Create Combined Manifest Tag
        id: create_combined_manifest
        run: |
          for IMAGE in $(jq -r '.tags[]' <<< "$DOCKER_METADATA_OUTPUT_JSON"); do
            docker buildx imagetools create --tag "$IMAGE" "ghcr.io/${{ github.repository }}:${{ env.BUILDER_TAG }}-amd64" "ghcr.io/${{ github.repository }}:${{ env.BUILDER_TAG }}-arm64"
          done