name: Build Custom Auditor

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

    steps:
      - name: Checking out latest Auditor tag
      uses: actions/checkout@v3
      with:
          repository: GrapheneOS/Auditor
          ref: refs/tags/$(git ls-remote --tags https://github.com/GrapheneOS/Auditor.git | awk '{print $2}' | grep -v '\^{}' | sort -V | tail -n 1 | sed 's|refs/tags/||')

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.2

      # This will decode the keystore from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in /android-app path
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks

      - name: Replace attestation.app with own server
        env:
          DOMAIN: ${{ secrets.DOMAIN }}

        run: |
          sed -i "s/attestation\.app/$DOMAIN/g" app/src/main/java/app/attestation/auditor/RemoteVerifyJob.java
          sed -i 's/applicationId = "app\.attestation\.auditor"/applicationId = "app.selfhosted.auditor"/g' app/build.gradle.kts

      - name: Build Release apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Build Release bundle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew bundleRelease --stacktrace

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_OUTPUT

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ steps.releaseAab.outputs.aabfile }} ${{ steps.releaseApk.outputs.apkfile }}
          dest: ${{ steps.releaseApk.outputs.apkfile }}.zip

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
           name: release-artifacts
           path: ${{ steps.releaseApk.outputs.apkfile }}